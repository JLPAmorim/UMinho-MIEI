#BlueJ class context
comment0.target=JavaFactura
comment1.params=
comment1.target=JavaFactura()
comment1.text=\r\n\ Construtor\ vazio\r\n
comment10.params=
comment10.target=java.util.Map\ getFacturas()
comment10.text=\r\n\ Obter\ o\ mapeamentos\ de\ facturas\ da\ aplica\u00E7\u00E3o\r\n\ @return\ mapeamento\ de\ codigos\ para\ facturas\r\n
comment11.params=
comment11.target=java.util.Map\ getTodasActiv()
comment11.text=\r\n\ Obter\ o\ mapeamentos\ de\ todas\ as\ Actividades\ j\u00E1\ pr\u00E9-definidas\ da\ aplica\u00E7\u00E3o\r\n\ @return\ mapeamento\ de\ codigos\ para\ actividades\r\n
comment12.params=codigo
comment12.target=void\ setCodigoActor(java.lang.String)
comment12.text=\r\n\ Definir\ o\ c\u00F3digo\ do\ Actor\ actual\r\n\ @param\ codigo\ codigo\ do\ actor\ actual\r\n
comment13.params=
comment13.target=JavaFactura\ testApp()
comment13.text=\r\n\ Fun\u00E7\u00E3o\ de\ teste\ do\ programa\r\n\ @return\ JavaFactura\ para\ poder\ testar\ as\ funcionalidades\r\n
comment14.params=actor
comment14.target=void\ registaActor(Actor)
comment14.text=\r\n\ Regista\ um\ novo\ actor\r\n\ @param\ actor\ o\ actor\ a\ registar\r\n\ @throws\ ActorExistenteException\r\n
comment15.params=nif\ password
comment15.target=void\ iniciaSessao(java.lang.String,\ java.lang.String)
comment15.text=\r\n\ Inicia\ a\ sess\u00E3o\r\n\ @param\ nif\ Nif\ do\ Actor\r\n\ @param\ password\ Password\ do\ actor\r\n\ @throws\ SemAutorizacaoException\r\n
comment16.params=
comment16.target=void\ fechaSessao()
comment16.text=\r\n\ Termina\ sess\u00E3o\r\n
comment17.params=f
comment17.target=void\ criaFactura(Factura)
comment17.text=\r\n\ Cria\ uma\ factura\r\n\ @param\ f\ Factura\ a\ criar\r\n\ @throws\ FacturaExistenteException\r\n\ @throws\ SemAutorizacaoException\r\n
comment18.params=
comment18.target=double\ montanteDeducao()
comment18.text=\ \r\n\ Algoritmo\ de\ determina\u00E7\u00E3o\ do\ montante\ fiscal\ a\ deduzir\r\n\ @return\ montanteDeduz\ montante\ a\ deduzir\r\n
comment19.params=
comment19.target=void\ mostraFacturas()
comment19.text=\r\n\ Mostra\ todas\ as\ Facturas\ referentes\ ao\ Contribuinte\ Individual\ com\ sessao\ Iniciada\r\n
comment2.params=loginIndividual\ loginEmpresa\ loginAdmin\ registos\ codigoActor\ actores\ facturas\ todasActiv
comment2.target=JavaFactura(boolean,\ boolean,\ boolean,\ java.util.ArrayList,\ java.lang.String,\ java.util.Map,\ java.util.Map,\ java.util.Map)
comment2.text=\r\n\ Construtor\ por\ par\u00E2metros\r\n\ @param\ loginIndividual\ Sess\u00E3o\ como\ individual\ se\ true\r\n\ @param\ loginEmpresa\ Sess\u00E3o\ como\ Empresa\ se\ true\r\n\ @param\ loginAdmin\ Sess\u00E3o\ como\ Admin\ se\ true\r\n\ @param\ registos\ lista\ de\ todos\ os\ registos\ de\ facturas\ confirmadas\r\n\ @param\ codigoActor\ C\u00F3digo\ do\ Actor\ com\ sess\u00E3o\ iniciada\r\n\ @param\ actores\ Mapeamento\ de\ actores\ registados\r\n\ @param\ facturas\ Mapeamento\ de\ facturas\ registadas\r\n\ @param\ todasActiv\ Mapeamento\ de\ todas\ as\ Actividades\ Econ\u00F3micas\ existentes\r\n
comment20.params=
comment20.target=void\ confirmaFact()
comment20.text=\r\n\ Confirma\ as\ Facturas\ dos\ Contribuintes\ Individuais\ que\ ainda\ se\ encontram\ num\ estado\ Pendente\r\n
comment21.params=
comment21.target=double\ totalValorFact()
comment21.text=\r\n\ Calcula\ o\ total\ de\ despesas\ efetuadas\ pelo\ contribuinte\ com\ sessao\ iniciada\r\n\ @return\ total\ total\ de\ despesas\ efetuadas\ no\ sistema\r\n
comment22.params=
comment22.target=java.util.Map\ getValueForActiv()
comment22.text=\r\n\ Obter\ o\ mapeamento\ de\ C\u00F3digos\ de\ Actividades\ para\ valores\ de\ despesas\ efetuados\r\n\ @return\ Mapeamento\ de\ codigo\ de\ actividade\ para\ valor\ de\ despesas\ efetuadas\ nessa\ actividade\r\n
comment23.params=actividade
comment23.target=double\ sumValores(Actividade)
comment23.text=\r\n\ Calcula\ o\ total\ de\ despesas\ efetuadas\ pelo\ contribuinte\ com\ sessao\ iniciada\r\n\ @param\ actividade\ actividade\ que\ se\ pretende\ saber\ o\ valor\ de\ despesas\ efetuadas\r\n\ @return\ valor\ de\ despesas\ efetuadas\ na\ actividade\r\n
comment24.params=
comment24.target=java.util.TreeSet\ getFacturasEmpresaData()
comment24.text=\r\n\ Obter\ as\ facturas\ da\ Empresa\ com\ sess\u00E3o\ iniciada,\ ordenadas\ por\ data\r\n\ @return\ TreeSet\ com\ as\ facturas\ da\ Empresa,\ ordenadas\ por\ data\r\n
comment25.params=
comment25.target=java.util.TreeSet\ getFacturasEmpresaValor()
comment25.text=\r\n\ Obter\ as\ facturas\ da\ Empresa\ com\ sess\u00E3o\ iniciada,\ ordenadas\ por\ valor\r\n\ @return\ TreeSet\ com\ as\ facturas\ da\ Empresa,\ ordenadas\ por\ valor\r\n
comment26.params=d1\ d2
comment26.target=java.util.TreeSet\ getListFactIndivDatas(java.util.Date,\ java.util.Date)
comment26.text=\r\n\ Obter\ as\ facturas\ da\ Empresa\ com\ sess\u00E3o\ iniciada,\ por\ contribuinte,\ entre\ um\ intervalo\ de\ datas\r\n\ @return\ TreeSet\ com\ as\ facturas\ da\ Empresa,\ por\ contribuinte,\ entre\ um\ intervalo\ de\ datas\r\n
comment27.params=
comment27.target=java.util.List\ getListFactIndivValor()
comment27.text=\r\n\ Obter\ as\ facturas\ da\ Empresa\ com\ sess\u00E3o\ iniciada,\ por\ contribuinte,\ ordenadas\ por\ ordem\ decrescente\ de\ valor\r\n\ @return\ TreeSet\ com\ as\ facturas\ da\ Empresa,\ por\ contribuinte,\ entre\ um\ intervalo\ de\ datas\r\n
comment28.params=d1\ d2
comment28.target=double\ getValorTotal(java.util.Date,\ java.util.Date)
comment28.text=\r\n\ Obter\ o\ total\ facturado\ entre\ duas\ datas\r\n\ @param\ d1\ primeiro\ data\ \r\n\ @param\ d2\ segunda\ data\r\n\ @return\ total\ total\ facturado\ entre\ as\ duas\ datas\r\n
comment29.params=jf
comment29.target=JavaFactura\ registaNovoActor(JavaFactura)
comment29.text=\r\n\ Regista\ um\ novo\ actor\r\n\ @param\ jf\ JavaFactura\r\n\ @return\ a\ mesma\ JavaFactura\ que\ recebeu\ mas\ com\ o\ novo\ actor\r\n
comment3.params=jf
comment3.target=JavaFactura(JavaFactura)
comment3.text=\r\n\ Construtor\ por\ c\u00F3pia\r\n\ @param\ jf\ JavaFactura\ a\ copiar\r\n
comment30.params=jf
comment30.target=JavaFactura\ registaFactura(JavaFactura)
comment30.text=\r\n\ Regista\ uma\ nova\ Factura\r\n\ @param\ jf\ JavaFactura\r\n\ @return\ a\ mesma\ JavaFactura\ que\ recebeu\ mas\ com\ a\ nova\ factura\r\n
comment31.params=
comment31.target=void\ main()
comment31.text=\r\n\ Fun\u00E7ao\ main\r\n\ Fun\u00E7\u00E3o\ que\ trata\ de\ tornar\ o\ programa\ mais\ "amigo"\ do\ utilizador,\ fornecendo\ uma\ interface\ textual\r\n
comment32.params=fich
comment32.target=void\ guardaDados(java.lang.String)
comment32.text=\r\n\ Fun\u00E7\u00E3o\ que\ guarda\ todos\ os\ dados\ da\ nossa\ aplica\u00E7\u00E3o\r\n\ @param\ fich\ nome\ do\ ficheiro\ a\ criar\r\n
comment33.params=fich
comment33.target=JavaFactura\ carregarDados(java.lang.String)
comment33.text=\r\n\ Fun\u00E7\u00E3o\ respons\u00E1vel\ por\ carregar\ um\ ficheiro\ com\ os\ dados\r\n\ @return\ javafactura\ que\ estava\ guardada\ no\ ficheiro\ \r\n
comment34.params=f\ ap
comment34.target=void\ log(java.lang.String,\ boolean)
comment34.text=\r\n\ Fun\u00E7\u00E3o\ que\ escreve\ num\ ficheiro\ tudo\ o\ que\ foi\ gravado\ na\ fun\u00E7\u00E3o\ guarda\ dados\r\n\ @param\ f\ nome\ do\ ficheiro\ de\ log\r\n\ @param\ ap\r\n
comment35.params=
comment35.target=java.lang.String\ toString()
comment35.text=\r\n\ Obter\ a\ representa\u00E7\u00E3o\ textual\ de\ uma\ imobiliaria\r\n\ @return\ representa\u00E7\u00E3o\ textual\r\n
comment4.params=
comment4.target=boolean\ getLoginIndividual()
comment4.text=\r\n\ Obter\ informa\u00E7\u00E3o\ sobre\ o\ login\ do\ Contribuinte\ Individual\r\n\ @return\ true\ se\ tem\ sessao\ como\ individual\r\n
comment5.params=
comment5.target=boolean\ getLoginEmpresa()
comment5.text=\r\n\ Obter\ informa\u00E7\u00E3o\ sobre\ o\ login\ de\ empresa\r\n\ @return\ true\ se\ tem\ sessao\ como\ empresa\r\n
comment6.params=
comment6.target=boolean\ getLoginAdmin()
comment6.text=\r\n\ Obter\ informa\u00E7\u00E3o\ sobre\ o\ login\ de\ empresa\r\n\ @return\ true\ se\ tem\ sessao\ como\ empresa\r\n
comment7.params=
comment7.target=java.util.ArrayList\ getRegistos()
comment7.text=\r\n\ Obter\ a\ lista\ dos\ registos\ de\ confirma\u00E7\u00F5es\ de\ facturas\r\n\ @return\ lista\ dos\ dos\ registos\r\n
comment8.params=
comment8.target=java.lang.String\ getCodigoActor()
comment8.text=\r\n\ Obter\ o\ c\u00F3digo\ do\ actor\ atual\r\n\ @return\ codigo\ do\ actor\ com\ sessao\ iniciada\r\n
comment9.params=
comment9.target=java.util.Map\ getActores()
comment9.text=\r\n\ Obter\ o\ mapeamento\ de\ de\ actores\ da\ aplica\u00E7\u00E3o\r\n\ @return\ mapeamento\ de\ actores\ da\ aplica\u00E7\u00E3o\r\n
numComments=36
